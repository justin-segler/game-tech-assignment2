--------------------------------------------
|  The Racket Game - Final Project Report  |
--------------------------------------------
Group Members: ï»¿Ben Berry, Justin Segler, Jose Ramirez

Starting off, one of our biggest problems was familiarizing ourselves with Bullet. It took many more hours than expected to correctly configure and include the Bullet libraries so that we could get things up and running. Familiarizing ourselves with Bullet took a lot of time as the Bullet libraries are pretty extensive. We chose to split up at the beginning of the project such that each of us was working on a different part of the project. This actually worked to our advantage as we managed to get some of the more simple things up and running while others were working up the steep learning curve on other aspects of the project. One of the first things implemented was sounds. Although it took much more time to get the sounds playing upon triggers, the sounds were one of the first things that was added to where we picked up from Project 1. We chose to break down the project into much smaller pieces, such as adding the racket, adding rigid bodies and collisions, implementing gravity, adding targets, adding the GUI, etc. Each aspect of the project did not come without its glitches. Getting the ball to respond to gravity was a huge obstacle that we faced towards the beginning of the project. Small issues with our code accumulated and prevented gravity from impacting the ball. Once these small issues were identified and tweaked, our ball responded to gravity. However, it was being affected too much, so much so that the ball would fly off the screen upon initialization. After adjusting the scale of the scene, the ball, and the force of gravity on the ball, things were starting to shape up. From this point we made an effort to implement the racket and its dynamics. Ben made a racket inside of Blender 3D with a corresponding texture and worked to implement the rotation of the racket around a fixed point. This ended up being much more mathematical than expected and took a lot of trial and error. Once we placed the racket in the scene and had its rotation working, the main challenge shifted to the animation of the racket swing. This took some time to discover how to not only move the racket itself but also move the racket's rigid body accordingly. This was one of the largest glitches that we faced in the project. After fuddling with the rigid bodies, we managed to get the racket's rigid body to respond to the position and orientation of the racket itself. After this came adding in targets into the scene and implementing the GUI. Ben also created a simple target mesh with texture in Blender 3D and pulled it into Ogre. This part of the project went pretty smoothly. Implementing the GUI took a lot of time to configure, but once it was configured, implementing the GUI came quickly. Towards the end of the project, we encountered some small issues, such as reseting the ball, creating new targets upon hitting targets, and some small collision issues with the walls. 

In the end, we were able to establish ourselves as a team. We were diligent about starting early and being proactive once the project was first assigned. This enabled us to work more consistently throughout the three weeks that the project was assigned without much stress. We communicated well and worked with each other's schedules to be in the lab at the same time as others when possible. 

One of the areas of improvement would have been to work more cohesively. Although we communicated well, for much of the time we ended up working alongside each other on different aspects of the project which made it extremely difficult to ask for help regarding small and specific issues. It would have been advantageous had we done more paired programming. However, we ended up finding a system that worked for us and our schedules. 
